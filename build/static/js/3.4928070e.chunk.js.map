{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/quotes/HighlightedQuote.module.css","pages/quote-details.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/quotes/HighlightedQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/quote-details.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","offset","arguments","length","undefined","toLowerCase","v4","options","buf","rnds","random","HighlightedQuote","props","quote","useContext","QuotesContext","QuotesList","find","elt","id","quoteId","className","classes","text","author","CommentItem","item","CommentsList","comments","map","comment","NewCommentForm","commentTextRef","useRef","SetCommentsList","CommentsContext","submitFormHandler","event","preventDefault","onSetIsLoading","setTimeout","onChangeIsAddingComment","prevState","generateKey","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","isLoading","SetIsLoading","LoadingSpinner","onClick","val","Quotedetails","params","useParams","currentQuoteComments","commentsList","filter","path","exact","to","style","textAlign"],"mappings":"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","file":"static/js/3.4928070e.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2FORE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-container\":\"quote-details_btn-container__2I0Ef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__VP6fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1wINZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2e2i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1h-iP\",\"loading\":\"NewCommentForm_loading__1Mvq3\",\"control\":\"NewCommentForm_control__1zfiL\",\"actions\":\"NewCommentForm_actions__uigJs\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useContext } from 'react';\nimport classes from './HighlightedQuote.module.css';\nimport QuotesContext from '../../store/quotes-context';\n\nconst HighlightedQuote = (props) => {\n  const {QuotesList} = useContext(QuotesContext);\n  const quote = QuotesList.find(elt=>{\n    return elt.id === props.quoteId\n  })\n\n  return (\n    <figure className={classes.quote}>\n      <p>{quote.text}</p>\n      <figcaption>{quote.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef,useContext } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport CommentsContext from '../../store/comments-context';\nimport { v4 as generateKey } from 'uuid';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {SetCommentsList} = useContext(CommentsContext);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    props.onSetIsLoading(true);\n    setTimeout(()=>{\n      props.onChangeIsAddingComment();\n      props.onSetIsLoading(false);\n    },100);\n    SetCommentsList(prevState=>[...prevState,{id:generateKey(),quoteId:props.quoteId,text:commentTextRef.current.value}])\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [isLoading,SetIsLoading] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const changeIsAddingComment = ()=>{\n    setIsAddingComment(false);\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {isLoading && <LoadingSpinner/>}\n      {(!isAddingComment && !isLoading) && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {(isAddingComment && !isLoading) && <NewCommentForm onSetIsLoading={(val)=>SetIsLoading(val)} onChangeIsAddingComment={changeIsAddingComment} quoteId={props.quoteId}/>}\n        \n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { useContext } from 'react'\r\nimport { Route, useParams,Link } from \"react-router-dom\"\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport classes from \"./quote-details.module.css\";\r\nimport CommentsList from \"../components/comments/CommentsList\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport CommentsContext from '../store/comments-context';\r\n\r\nconst Quotedetails = () => {\r\n  const params = useParams();\r\n  const {commentsList} = useContext(CommentsContext);\r\n\r\n  const currentQuoteComments = commentsList.filter(elt=>elt.quoteId===params.quoteId);\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote quoteId={params.quoteId}/>\r\n      <Route path={`/quotes/${params.quoteId}`} exact>\r\n        <div className={classes[\"btn-container\"]}>\r\n          <Link to={`/quotes/${params.quoteId}/comments`} className=\"btn\">Load commnets</Link>\r\n        </div>\r\n      </Route> \r\n      <Route path={`/quotes/${params.quoteId}/comments`} exact>\r\n        <div>\r\n          <Comments quoteId={params.quoteId}/>\r\n          {currentQuoteComments.length>0 ? <CommentsList comments={currentQuoteComments}/> : <p style={{textAlign:'center'}}>No Comments were added!</p>}\r\n        </div>\r\n      </Route>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Quotedetails"],"sourceRoot":""}